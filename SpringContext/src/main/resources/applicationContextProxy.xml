<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--1 原始方法-->
    <bean id="simpleUserService" class="com.arminzheng.proxy.simple.UserServiceImpl"/>
    <!--2 额外功能-->
    <bean id="before" class="com.arminzheng.proxy.dynamic.MyMethodBeforeAdvice"/>

    <bean id="around" class="com.arminzheng.proxy.dynamic.AroundMethodInterceptor"/>

    <!--4 组装切面-->
    <aop:config proxy-target-class="true">
        <!--3 切入点-->
        <aop:pointcut id="pc" expression="execution(* com..UserService.register(com.arminzheng.proxy.simple.User,..))"/>
        <!--pointcut 好比 被@Pointcut标记 切入点复用方法-->
        <aop:pointcut id="pc1" expression="args(String, String)"/>
        <!-- advisor 好比 被@Around标记 附加额外功能的方法 -->
        <aop:advisor advice-ref="before" pointcut-ref="pc"/>
        <aop:advisor advice-ref="around" pointcut-ref="pc"/>
        <aop:advisor advice-ref="around" pointcut-ref="pc1"/>
    </aop:config>

    <bean id="myAspect" class="com.arminzheng.proxy.aspect.MyAspect"/>
    <!-- 告知Spring基于注解进行开发-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--  jdk代理  Proxy.newProxyInstance() -->
    <!--  cglib代理  Enhance.create() -->
    <!--  jdk代理/cglib代理切换  proxy-target-class -->

    <!-- id 不重要 不单独调用。BeanPostProcessor 会全局处理所有的bean 不能多注册 -->
    <bean id="myBeanPostProcessor" class="com.arminzheng.proxy.aspect.MyBeanPostProcessor"/>

    <!--调用同类方法-->
    <bean id="userServiceImpl2" class="com.arminzheng.proxy.aspect.UserServiceImpl2"/>
</beans>
